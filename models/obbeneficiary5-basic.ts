/*
Account and Transaction API Specification

Swagger for Account and Transaction API Specification

The version of the OpenAPI document: 3.1.7
Contact: ServiceDesk@openbanking.org.uk

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { OBBeneficiaryType1Code } from './obbeneficiary-type1-code';

/**
 * 
 * @export
 * @interface OBBeneficiary5Basic
 */
export interface OBBeneficiary5Basic {
    /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     * @type {string}
     * @memberof OBBeneficiary5Basic
     */
    'AccountId'?: string;
    /**
     * A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner.
     * @type {string}
     * @memberof OBBeneficiary5Basic
     */
    'BeneficiaryId'?: string;
    /**
     * Specifies the Beneficiary Type.
     * @type {OBBeneficiaryType1Code}
     * @memberof OBBeneficiary5Basic
     */
    'BeneficiaryType'?: OBBeneficiaryType1Code;
    /**
     * Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction. Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money. If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor\'s reference or payment remittance identification should be quoted in the end-to-end transaction identification.
     * @type {string}
     * @memberof OBBeneficiary5Basic
     */
    'Reference'?: string;
    /**
     * Additional information that can not be captured in the structured fields and/or any other specific block.
     * @type {{ [key: string]: any; }}
     * @memberof OBBeneficiary5Basic
     */
    'SupplementaryData'?: { [key: string]: any; };
}

